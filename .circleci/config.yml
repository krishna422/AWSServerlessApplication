version: '2.1'
jobs:  
  aws-cli-example:    
    docker:
      - image: amazon/aws-cli:latest      
    steps:
      - checkout
      - run:
          command: |
            aws --version
            aws configure set profile testprofile
            aws configure set region us-east-2
            aws configure set aws_access_key_id AKIARK55DHZSJIZCT2QE
            aws configure set aws_secret_access_key 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
            pwd && ls
            echo "In aws"
  dotnet-docker:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:5.0
    steps:
      - checkout
      - run:
          command: |
            pwd && ls
            dotnet publish --output ".\AWSServerlessApplication\AWSServerlessApplication\.\bin\Release\netcoreapp3.1\publish" --configuration "Release" --framework "netcoreapp3.1" /p:GenerateRuntimeConfigurationFiles=true --runtime linux-x64 --self-contained false
            pwd && ls
            dotnet new -i Amazon.Lambda.Templates::*
            dotnet tool install -g Amazon.Lambda.Tools
            dotnet tool update -g Amazon.Lambda.Tools
            dotnet lambda deploy-function ".\AWSServerlessApplication\AWSServerlessApplication\.\bin\Release\netcoreapp3.1\publish" --function-role "arn:aws:iam::092201500260:role/ServerlessApplication-AspNetCoreFunctionRole-1HYM2CIY8PXLK" --region "us-east-2"
workflows:
  Socotra-Configuration-Deployment:
    jobs:
      - aws-cli-example
      - dotnet-docker:
          requires:
            - aws-cli-example
          