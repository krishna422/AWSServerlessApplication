version: '2.1'
jobs:  
  aws-cli-example:    
    docker:
      - image: amazon/aws-cli:latest      
    steps:
      - checkout
      - run:
          command: |
            aws --version
            aws configure set profile testprofile
            aws configure set region us-east-2
            aws configure set aws_access_key_id AKIARK55DHZSJIZCT2QE
            aws configure set aws_secret_access_key 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
            pwd && ls
            echo "In aws"
  dotnet-docker:
    working_directory: ~/project/AWSServerlessApplication/AWSServerlessApplication
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:5.0
    steps:
      - checkout
      - run:
          name: Check PWD
          command: cd AWSServerlessApplication && pwd && ls
      - run:
          name: Install dotnet tools
          command: dotnet tool install --global dotnet-ef      
      - run:
          name: Install Amazon Lambda Templates
          command: dotnet new -i Amazon.Lambda.Templates::*
      - run:
          name: Install Lambda Tools
          command: |
            dotnet tool install --tool-PATH="$PATH:/root/.dotnet/tools" Amazon.Lambda.Tools
            dotnet new tool-manifest
            dotnet tool install --global Amazon.Lambda.Tools --version 5.1.4
      - run:
          name: Set PATH for dotnet tools
          command: export PATH="$PATH:/root/.dotnet/tools"
      - run:
          name: Update
          command: dotnet tool update -g Amazon.Lambda.Tools
      - run:
          name: Publish
          command: dotnet lambda deploy-function pwd --function-role "arn:aws:iam::092201500260:role/ServerlessApplication-AspNetCoreFunctionRole-1HYM2CIY8PXLK" --region "us-east-2"
workflows:
  Socotra-Configuration-Deployment:
    jobs:
      - aws-cli-example
      - dotnet-docker:
          requires:
            - aws-cli-example
          